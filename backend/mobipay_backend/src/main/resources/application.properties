# env
spring.config.import=optional:file:.env[.properties]
# DB Setting
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://${MYSQL_HOST}:${MYSQL_PORT}/${MYSQL_DB}
spring.datasource.username=${MYSQL_USER}
spring.datasource.password=${MYSQL_PASSWORD}
# JPA Setting
spring.jpa.hibernate.ddl-auto=${DDL_AUTO_OPTION}
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
# Insert data into the database after the schema is created. Data is Definded in data.sql.
spring.sql.init.mode=always
spring.sql.init.encoding=UTF-8
spring.jpa.defer-datasource-initialization=true
# JWT SecretKey
spring.jwt.secret=${JWT_SECRET_KEY}
# SSAFY_API_KEY
ssafy.api.key=${SSAFY_API_KEY}
#registration
spring.security.oauth2.client.registration.kakao.client-name=${KAKAO_CLIENT_NAME}
spring.security.oauth2.client.registration.kakao.client-id=${KAKAO_CLIENT_ID}
spring.security.oauth2.client.registration.kakao.client-secret=${KAKAO_CLIENT_SECRET}
spring.security.oauth2.client.registration.kakao.redirect-uri=${KAKAO_REDIRECT_URI}
spring.security.oauth2.client.registration.kakao.authorization-grant-type=${KAKAO_AUTHORIZATION_GRANT_TYPE}
spring.security.oauth2.client.registration.kakao.scope=${KAKAO_SCOPE}
spring.security.oauth2.client.registration.kakao.client-authentication-method=client_secret_post
#provider
spring.security.oauth2.client.provider.kakao.authorization-uri=${KAKAO_AUTHORIZATION_URI}
spring.security.oauth2.client.provider.kakao.token-uri=${KAKAO_TOKEN_URI}
spring.security.oauth2.client.provider.kakao.user-info-uri=${KAKAO_USER_INFO_URI}
spring.security.oauth2.client.provider.kakao.user-name-attribute=${KAKAO_USER_NAME_ATTRIBUTE}
# nginx forward-header-strategy
server.forward-headers-strategy=framework
# trace SQL
#accesstoken-redirect-url
app.redirect.uri=${REDIRECT_URI}
## Log Hibernate SQL statements through logger
logging.level.org.hibernate.SQL=debug
## Parameter tracing
logging.level.org.hibernate.type=trace


